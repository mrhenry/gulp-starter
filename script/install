#!/usr/bin/env bash

# Example usage:
# gulp-starter will take `pwd` as project name & `public` as target directory
# gulp-starter --public-path foo will take `pwd` as project name & `foo` as target directory
# gulp-starter --public-path foo bar will take `bar` as project name & `foo` as target directory

# Parse incoming arguments
while [[ $# -gt 1 ]]
do
key="$1"

case $key in
    -p|--public-path)
    PUBLIC_PATH="$2"
    shift # past argument
    ;;
    -t|--template)
        if [[ $2 == "wp" ]]
        then
            PUBLIC_PATH=wp-content/themes/PROJECT_SLUG/public
        else
            echo "Unsupported template: $2"
            exit 1
        fi
    shift # past argument
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

PROJECT_SLUG=${1:-${PWD##*/}}
PUBLIC_PATH=${PUBLIC_PATH:-"public"}
PUBLIC_PATH=${PUBLIC_PATH/"PROJECT_SLUG"/$PROJECT_SLUG}

# Check yarn install
if [[ -z "$(which yarn)" ]]
then
    echo -e "\n--> Can't find the yarn command."
    echo -e "--> Make sure yarn is installed correctly. "
    echo -e "--> $ brew install yarn"

    exit 1

else
    echo -e "\n--> Yarn installed: OK"
    echo -e "    $(which yarn)"

fi

echo -e "\n--> Downloading gulp-starter\n"
curl -L https://github.com/mrhenry/gulp-starter/archive/master.zip > gulp-starter-master.zip

echo -e "\n--> Extracting\n"
unzip gulp-starter-master.zip

echo -e "\n--> Copying files\n"
rm gulp-starter/README.md
cp -R gulp-starter-master/template/* ./
cp -R gulp-starter-master/template/.[^.]* ./

echo -e "\n--> Bootstrapping\n"

mkdir -p $PUBLIC_PATH

sed -i -e "s:{{PUBLIC_PATH}}:${PUBLIC_PATH}:g" ./gulp/config.js
sed -i -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" ./package.json
sed -i -e "s:{{PROJECT_SLUG}}:${PROJECT_SLUG}:g" ./gulp/config.js

echo -e "\nCreated public folder\n"

echo -e "\n--> Installing dependencies through Yarn\n"
yarn install

echo -e "\n--> Removing installation files\n"
rm -Rf ./gulp-starter-master*

echo -e "\n--> That's all, folks!\n"
